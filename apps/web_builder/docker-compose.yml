version: '3.8'
services:
  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - '8000:8000'

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: wb_root_password
      MYSQL_DATABASE: wb_rdb
      MYSQL_USER: wb_user
      MYSQL_PASSWORD: wb_password
    ports:
      - '3307:3306'
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  mysql_test:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: wb_root_password
      MYSQL_DATABASE: wb_rdb
      MYSQL_USER: wb_user
      MYSQL_PASSWORD: wb_password
    ports:
      - '3308:3306'
    volumes:
      - mysql_data_test:/var/lib/mysql

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data  # Volume to store as

  # wb_api_helloworld:
  #   build:
  #     context: ./wb_backend/wb_serverless/wb_api_helloworld
  #   ports:
  #     - '3000:3000'
  #   command: npx serverless offline
  #   volumes:
  #     - ./wb_backend/wb_serverless/wb_api_helloworld:/app/wb_backend/wb_serverless/wb_api_helloworld

  # frontend:
  #   build:
  #     context: ./wb_frontend
  #   ports:
  #     - '5173:5173'
  #   command: npm run dev
  #   volumes:
  #     - ./wb_frontend:/app

volumes:
  mysql_data:
  mysql_data_test: